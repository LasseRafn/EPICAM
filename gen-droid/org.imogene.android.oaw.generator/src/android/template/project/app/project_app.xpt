«IMPORT core»
«DEFINE generate(boolean multilogin) FOR Project»
«FILE "/" + name.toLowerCase() + "/app/" + name.toFirstUpper() + "App.java"»
package org.imogene.android.«name.toLowerCase()».app;

import fr.medes.android.app.AmlApplication;
import fr.medes.android.database.sqlite.AmlOpenHelper;
import fr.medes.android.util.encryption.DESedeProvider;
import fr.medes.android.util.encryption.EncryptionManager;

import java.util.UUID;

import org.acra.ACRA;
import org.acra.ReportingInteractionMode;
import org.acra.annotation.ReportsCrashes;
import org.acra.sender.HttpSender;
import org.acra.sender.HttpSender.Method;
import org.acra.sender.HttpSender.Type;
import org.imogene.android.database.sqlite.ImogOpenHelper;
import org.imogene.android.notification.NotificationController;
import org.imogene.android.preference.Preferences;
import org.imogene.android.sync.SyncManager;
import org.imogene.android.util.NTPClock;
import org.imogene.android.«name.toLowerCase()».R;
import org.imogene.android.«name.toLowerCase()».database.sqlite.«name.toFirstUpper()»OpenHelper;
import org.imogene.android.«name.toLowerCase()».domain.«name.toFirstUpper()»Helper;
import org.imogene.android.«name.toLowerCase()».domain.«name.toFirstUpper()»LocalizedText;

@ReportsCrashes(
		formKey = "",
		formUri = "http://bugreport.i-mogene.org/acra",
		formUriBasicAuthLogin = "android",
		formUriBasicAuthPassword = "androidpassword",
		maxNumberOfRequestRetries = 3,
		disableSSLCertValidation = true,
		mode = ReportingInteractionMode.DIALOG,
		resToastText = R.string.imog__crash_toast_text, // optional, displayed as soon as the crash occurs, before collecting data which can take a few seconds
	    resDialogText = R.string.imog__crash_dialog_text,
	    resDialogIcon = android.R.drawable.ic_dialog_info, //optional. default is a warning sign
	    resDialogTitle = R.string.imog__crash_dialog_title, // optional. default is your application name
	    resDialogCommentPrompt = R.string.imog__crash_dialog_comment_prompt, // optional. when defined, adds a user text field input with this text resource as a label
	    resDialogOkToast = R.string.imog__crash_dialog_ok_toast // optional. displays a Toast message when the user accepts to send a report.
)
public class «name.toFirstUpper()»App extends AmlApplication {

	@Override
	public void onCreate() {
		super.onCreate();

		// The following line triggers the initialization of ACRA
    	ACRA.init(this);
    	ACRA.getErrorReporter().removeAllReportSenders();
		ACRA.getErrorReporter().setReportSender(new HttpSender(Method.PUT, Type.JSON, null));
		
		«name.toFirstUpper()»OpenHelper.init(this);
		«name.toFirstUpper()»Helper.init();
		«name.toFirstUpper()»LocalizedText.init();

		EncryptionManager.getInstance().setProxy(new DESedeProvider(this, R.raw.imog__encryption));

		Preferences prefs = Preferences.getPreferences(this);
		if (prefs.getSyncTerminal() == null) {
        	prefs.setSyncTerminal(UUID.randomUUID().toString());
        }

        «IF multilogin-»
        if (!prefs.isMultiloginEnabled()) {
        	prefs.setMultiloginEnabled(true);
        }
        «ELSE-»
        if (prefs.isMultiloginEnabled()) {
        	prefs.setMultiloginEnabled(false);
        }
        «ENDIF-»
        
        if (!prefs.isSetAdmin()) {
        	prefs.setAdminLogin("admin");
        	prefs.setAdminPassword("epipassword");
        	«REM»
			prefs.setAdminRoles("«FOREACH roles AS r SEPARATOR ';'»«r.name»«ENDFOREACH»");
			«ENDREM»
        }
        SyncManager.startIfNeeded(this);
        NotificationController.getInstance(this).watchForMessages(true);
        NTPClock.getInstance(this).updateOffsetAsync();
	}
	
	@Override
	public AmlOpenHelper getOpenHelper() {
		return ImogOpenHelper.getHelper();
	}
	
}
«ENDFILE»
«ENDDEFINE»
